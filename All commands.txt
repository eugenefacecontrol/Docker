docker ps } show running containers
docker ps -all } show the last container
docker ps --all } show all containers
docker run <image name> } create + start container
docker run -d <image name> } create + start container in the background
docker run busybox (echo Hello there | ls) } override the default command with new (if it supports it)
docker run -it <im age name> <command name> } run a new container from image with the following command (e.g. sh)
docker run -p <local port>:<container port> <image name> } every time I run the container, redirect incoming requests on local port <local port> to the port <container port> inside the controller
docker create <image name> } create container from image and return its id
docker create -p <local port>:<container port> <image name> } create container with redirected incoming requests on local port <local port> to the port <container port> inside the controller
docker start -a <container id> } start created container
docker logs <container id> } get log (all the information) from the container - you can use only after docker start <controller id>

docker stop <container id> } stop container from running with some time to cleanup
docker kill <container id> } stop container from running instantly
docker exec -it <container id> <command> } execute another command on specific container, -it allows us to provide input text to the container. -i means provide all the input text to the stdin. -t formats the text and little more
docker exec -it <container id> sh } open shell (command processer) on specific container
Ctrl + D } exit the shell. Or just use word 'exit'


docker build . } build the current project. Returns "writing image sha256:4e9898c2e20bb65776290534c40ed6e84d22d661a0fafc2b86d18fc278e0f34d" as output. characters after "sha256:" are image id. If "buildkit": false, then the result will be like this: "Successfully built f066c38ba027"
docker build -t yauhenisheima/<image name>:<tag name> . } build the current project with tagged name by witch you will be able to call it. Tag "latest" will be automatically added, so you don't need to specify it

docker system prune } remove all stopped containers and images


docker commit -c "CMD 'redis-server'" <container id> } Create image from container

docker-compose up } docker run <image name>
docker-compose up --build } docker build . + docker run <image name>
docker-compose up -d} docker run <image name> in the backround
docker-compose down } stop all the containers